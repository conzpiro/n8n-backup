{
  "createdAt": "2025-10-06T20:44:59.310Z",
  "updatedAt": "2025-10-06T21:46:18.000Z",
  "id": "wElzkfaeCenkrqEK",
  "name": "Nyhetssamlare v2",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "url": "https://rss.aftonbladet.se/rss2/small/pages/sections/senastenytt/",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        336,
        -448
      ],
      "id": "76bc8af6-9e23-4f9e-b8e9-9d63ebdc2559",
      "name": "Aftonbladet RSS"
    },
    {
      "parameters": {
        "url": "https://feeds.expressen.se/nyheter/",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        336,
        -256
      ],
      "id": "c12ed068-332c-475c-908e-c15c6e235789",
      "name": "Expressen RSS"
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        560,
        -448
      ],
      "id": "0db6544c-af8d-441a-8548-ef57a2565ea9",
      "name": "Limit"
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        560,
        -256
      ],
      "id": "e3eacca4-4107-44f1-b8f5-89ae6bb4d5fb",
      "name": "Limit1"
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        560,
        -64
      ],
      "id": "68955d3d-a47b-40df-957f-366892f65bf1",
      "name": "Limit2"
    },
    {
      "parameters": {
        "url": "https://techcrunch.com/feed/",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        336,
        -64
      ],
      "id": "b20cb58f-70ec-4b0c-95de-4580558d0f0d",
      "name": "TechCrunch RSS"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nfunction stripHTML(str) {\n  return str ? str.replace(/<[^>]*>?/gm, '').trim() : '';\n}\n\nfunction parseDate(d) {\n  const date = new Date(d);\n  return isNaN(date.getTime()) ? 0 : date.getTime();\n}\n\nfunction formatDate(d) {\n  try {\n    return new Date(d).toLocaleDateString('sv-SE', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n    });\n  } catch {\n    return '';\n  }\n}\n\n// 1Ô∏è‚É£ sortera nyaste f√∂rst\nitems.sort(\n  (a, b) =>\n    parseDate(b.json.isoDate || b.json.pubDate) -\n    parseDate(a.json.isoDate || a.json.pubDate)\n);\n\n// 2Ô∏è‚É£ skapa klickbara rader med datum och k√§lla\nconst lines = items.map((i) => {\n  const j = i.json;\n  const title = stripHTML(j.title || 'Ingen titel');\n  const url = j.link || j.url || '';\n  const source =\n    j.feedTitle ||\n    j['dc:creator'] ||\n    j.source ||\n    (j.link ? new URL(j.link).hostname.replace('www.', '') : 'Ok√§nd k√§lla');\n  const date = formatDate(j.isoDate || j.pubDate || j.published || new Date());\n  return `‚Ä¢ [${title}](${url}) ‚Äî ${source} ¬∑ ${date}`;\n});\n\n// 3Ô∏è‚É£ sl√• ihop allt till ett meddelande\nconst message = `üóûÔ∏è **TechCrunch**\\n` + lines.join('\\n');\n\nreturn [{ json: { content: message } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        784,
        -64
      ],
      "id": "2f7ac7d2-b136-4721-a1f8-ac8d09d8c292",
      "name": "Code"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=**Expressen**",
        "options": {},
        "embeds": {
          "values": [
            {
              "description": "={{ $json.content }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1008,
        -256
      ],
      "id": "9d956f60-9ab1-4117-a8de-b717d1e2cf35",
      "name": "Discord",
      "webhookId": "b487c1de-7195-4c6b-bd0f-2300895ce862",
      "credentials": {
        "discordWebhookApi": {
          "id": "Pn7a74tA19SOGk9R",
          "name": "Discord Webhook account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nfunction stripHTML(str) {\n  return str ? str.replace(/<[^>]*>?/gm, '').trim() : '';\n}\n\nfunction parseDate(d) {\n  const date = new Date(d);\n  return isNaN(date.getTime()) ? 0 : date.getTime();\n}\n\nfunction formatDate(d) {\n  try {\n    return new Date(d).toLocaleDateString('sv-SE', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n    });\n  } catch {\n    return '';\n  }\n}\n\nfunction getHostname(url) {\n  if (!url || typeof url !== 'string') return 'Ok√§nd k√§lla';\n  const match = url.match(/^(?:https?:\\/\\/)?(?:www\\.)?([^\\/]+)/i);\n  return match ? match[1] : 'Ok√§nd k√§lla';\n}\n\n// 1Ô∏è‚É£ sortera nyaste f√∂rst\nitems.sort(\n  (a, b) =>\n    parseDate(b.json.isoDate || b.json.pubDate) -\n    parseDate(a.json.isoDate || a.json.pubDate)\n);\n\n// 2Ô∏è‚É£ skapa klickbara rader med datum och k√§lla\nconst lines = items.map((i) => {\n  const j = i.json;\n  const title = stripHTML(j.title || 'Ingen titel');\n  const url = j.link || j.url || '';\n  const source =\n    j.feedTitle ||\n    j['dc:creator'] ||\n    j.source ||\n    getHostname(j.link);\n  const date = formatDate(j.isoDate || j.pubDate || j.published || new Date());\n  return `‚Ä¢ [${title}](${url}) ‚Äî ${source} ¬∑ ${date}`;\n});\n\n// 3Ô∏è‚É£ sl√• ihop allt till ett meddelande\nconst message = `üóûÔ∏è **Expressen**\\n` + lines.join('\\n');\n\nreturn [{ json: { content: message } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        784,
        -256
      ],
      "id": "69433bc5-fb4a-469c-98e8-440364faf548",
      "name": "Code1"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=",
        "options": {},
        "embeds": {
          "values": [
            {
              "description": "={{ $json.content }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1008,
        -64
      ],
      "id": "271eb091-d8cd-4151-8bf5-10074fd35dd7",
      "name": "Discord1",
      "webhookId": "6cb4495d-3706-491a-903a-f56faf4c0569",
      "credentials": {
        "discordWebhookApi": {
          "id": "Pn7a74tA19SOGk9R",
          "name": "Discord Webhook account 2"
        }
      }
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{$json[\"content\"]}}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        464,
        -992
      ],
      "id": "11c93011-aeed-4b75-b53e-1dc0da5eb949",
      "name": "Discord2",
      "webhookId": "fda2ad11-c5dc-439a-a491-5320785a1530",
      "credentials": {
        "discordWebhookApi": {
          "id": "Pn7a74tA19SOGk9R",
          "name": "Discord Webhook account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\n/**\n * === KONFIGURATION ===\n * L√§gg till fler om du har olika format\n */\nconst config = {\n  titleFields: ['title', 'headline', 'item_title'],\n  urlFields: ['link', 'url', 'guid'],\n  dateFields: ['isoDate', 'pubDate', 'published', 'date'],\n  sourceFields: ['feedTitle', 'source', 'author', 'creator']\n};\n\n/**\n * === Hj√§lpfunktioner ===\n */\nfunction firstAvailable(obj, keys) {\n  for (const key of keys) {\n    if (obj[key]) return obj[key];\n  }\n  return null;\n}\n\nfunction stripHTML(str) {\n  return str ? str.replace(/<[^>]*>?/gm, '').trim() : '';\n}\n\nfunction parseDate(d) {\n  const date = new Date(d);\n  return isNaN(date.getTime()) ? 0 : date.getTime();\n}\n\nfunction formatDate(d) {\n  try {\n    return new Date(d).toLocaleDateString('sv-SE', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    });\n  } catch {\n    return '';\n  }\n}\n\nfunction getHostname(url) {\n  const match = url.match(/https?:\\/\\/([^/]+)/);\n  return match ? match[1].replace('www.', '') : 'Ok√§nd k√§lla';\n}\n\n/**\n * === Huvudlogik ===\n */\n\n// sortera nyaste f√∂rst\nitems.sort((a, b) => {\n  const adate = firstAvailable(a.json, config.dateFields);\n  const bdate = firstAvailable(b.json, config.dateFields);\n  return parseDate(bdate) - parseDate(adate);\n});\n\n// begr√§nsa till 10 nyaste\nconst latest = items.slice(0, 10);\n\n// bygg utdata\nconst lines = latest.map((i) => {\n  const j = i.json;\n  const title = stripHTML(firstAvailable(j, config.titleFields) || 'Ingen titel');\n  const url = firstAvailable(j, config.urlFields) || '';\n  const source =\n    firstAvailable(j, config.sourceFields) || getHostname(url);\n  const date = formatDate(firstAvailable(j, config.dateFields) || new Date());\n  return `‚Ä¢ [${title}](${url}) ‚Äî ${source} ¬∑ ${date}`;\n});\n\n// sl√• ihop till Discord-meddelande\nconst message = `üóûÔ∏è **Aftonbladet**\\n` + lines.join('\\n');\n\nreturn [{ json: { content: message } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        784,
        -448
      ],
      "id": "de5437cc-b2b8-4573-8ff4-e3910eb473b8",
      "name": "Code2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d9a7c20a-a42b-4e28-b809-8d45cce1fd52",
              "leftValue": "={{$json[\"message\"][\"text\"].startsWith(\"nyheter\")}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1008,
        -480
      ],
      "id": "5297c7d4-e488-4be6-bef6-f43c9ce9da5f",
      "name": "If"
    },
    {
      "parameters": {
        "url": "={{$json[\"url\"]}}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -336,
        -992
      ],
      "id": "e5f8bb2f-c5aa-4145-a445-b5cdbef8bb9e",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "return [\n  { json: { name: \"Aftonbladet\", url: \"https://rss.aftonbladet.se/rss2/small/pages/sections/nyheter/\" }},\n  { json: { name: \"Expressen\", url: \"https://feeds.expressen.se/nyheter/\" }},\n  { json: { name: \"TechCrunch\", url: \"https://techcrunch.com/feed/\" }},\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -544,
        -880
      ],
      "id": "8df0bdcb-32c0-489e-9fda-01ff9e2388c5",
      "name": "RSS FEEDS"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -752,
        -992
      ],
      "id": "655d6f94-c056-4794-90ca-90479d38ab90",
      "name": "When clicking ‚ÄòExecute workflow‚Äô"
    },
    {
      "parameters": {
        "dataPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        -128,
        -992
      ],
      "id": "9c0e89e4-a274-4c26-95ee-0ad8fd279139",
      "name": "XML"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nfunction formatDate(d) {\n  return new Date(d).toLocaleDateString('sv-SE', {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n  });\n}\n\n// Skapa en rubrik\nconst header = `üóûÔ∏è **${items[0].json.feedTitle || 'Nyheter'}**`;\n\n// G√∂r en lista med klickbara l√§nkar\nconst lines = items.map(i => {\n  const j = i.json;\n  const title = j.title?.replace(/<[^>]*>/g, '') || 'Ingen titel';\n  const link = j.link || '';\n  const date = j.pubDate ? formatDate(j.pubDate) : '';\n  return `‚Ä¢ [${title}](${link}) ¬∑ ${date}`;\n});\n\nconst message = [header, ...lines].join('\\n');\n\nreturn [{ json: { content: message } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        288,
        -992
      ],
      "id": "1d988594-827c-41f2-99b9-19b8ed787187",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "jsCode": "const feed = $json.rss.channel;\n\n// s√§kerst√§ll att vi har en lista\nconst items = Array.isArray(feed.item) ? feed.item : [feed.item];\n\n// returnera varje artikel som ett eget item\nreturn items.map(i => ({\n  json: {\n    title: i.title,\n    link: i.link,\n    pubDate: i.pubDate,\n    feedTitle: feed.title || 'Nyheter'\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        -992
      ],
      "id": "6dc2c11a-7646-4b2f-ac12-df170a19bf42",
      "name": "xtract items"
    }
  ],
  "connections": {
    "Aftonbladet RSS": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Expressen RSS": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TechCrunch RSS": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Discord1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        []
      ]
    },
    "If": {
      "main": [
        []
      ]
    },
    "RSS FEEDS": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‚ÄòExecute workflow‚Äô": {
      "main": [
        [
          {
            "node": "RSS FEEDS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "xtract items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Discord2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "xtract items": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "a45e54c1-911f-41f8-ae4b-6b535ec3c502",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-10-06T20:44:59.317Z",
      "updatedAt": "2025-10-06T20:44:59.317Z",
      "role": "workflow:owner",
      "workflowId": "wElzkfaeCenkrqEK",
      "projectId": "ZOaOlv2Mz7C5Yg5V"
    }
  ],
  "tags": []
}